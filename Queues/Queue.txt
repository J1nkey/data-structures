# Queue

**Definition**: Like as many collection type, Queue also is a collection that contains value as a node. It's an application of Linked List, but follow First - In - First - Out (FIFO) principle.

They are used to store a collection of elements that need to accessed in the order they were added.

Queues are usefu when we need to process elements in the order they were received.
It means, what is come first, will be processed first.

The operations with Queue, we have:
* EnQueue(TType value): Insertion of elements to the queue
* DeQueue(): Removal of elements from the queue (take the first value of head node and remove that node then)
* IsFull(): Validates if the Queue is full (Implements this when we config the Queue has a size)
* IsNull(): Checks if the Queue is empty
* Peek(): Acquires the data element available at the front node of the queue without deleting it

Other operations:
* EnMultipleToQueue(TValueCollection values)
* DeQueueBySize(number size)


New knowledge:
* For determining the length of an array, we have a trick
code: length = *(&arr + 1) - arr
here: arr is the array

before deep dive to this, we must know * and & operations, they're both the symbol in pointer in c++
* for getting value in specific variable or in a particular memory location
& for getting address which hold the value

First we have &arr, that means we get the the value that arr variable store.
**Notice, an array does not store it's values, it store "the address or memory location of first value in that array!**

So, example, we have an array have 5 elements
int arr[] = {0,1,2,3,4};


